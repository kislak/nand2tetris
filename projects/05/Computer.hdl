// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {
    IN reset;
    PARTS:


/*
    CHIP CPU {

        IN  inM[16],         // M value input  (M = contents of RAM[A])
            instruction[16], // Instruction for execution
            reset;           // Signals whether to re-start the current
                             // program (reset==1) or continue executing
                             // the current program (reset==0).

        OUT outM[16],        // M value output
            writeM,          // Write to M?
            addressM[15],    // Address in data memory (of M)
            pc[15];          // address of next instruction

    CHIP Memory {
      IN in[16], load, address[16];
      OUT out[16];
*/


   ROM32K(address=pc, out=rom);
   CPU(inM=mem.in,  instruction=rom, reset=reset, outM=to.m, writeM=write.m, addressM=address.m, pc=pc);
   Memory(in=to.m, load=write.m, address[0..14]=address.m, out=mem.in);
}
