// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
  IN in[16], load, address[16];
  OUT out[16];

PARTS:
  // =2^12 = 4kb
  //
  // 0000 0000 0000 0000
  // 0011 1111 1111 1111

  //0x4000-0x5FFF
  // 0100 0000 0000 0000
  // 0101 1111 1111 1111

  //0x6000
  // 0110 0000 0000 0000 - kb

  DMux4Way(in=load, sel=address[13..14], a=l0, b=l1, c=l2, d=l3);

  Or(a=l0, b=l1, out=l0.or.l1);
  RAM16K(in=in, load=l0.or.l1, address=address[0..13], out=out.0.1);
  Screen(in=in, load=l2, address=address[0..12], out=out.2);
  Keyboard(out=out.3);

  Mux4Way16(a=out.0.1, b=out.0.1, c=out.2, d=out.3, sel=address[13..14], out=out);
}