// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

PARTS:
  Mux16(a=t, b=in, sel=load, out=mux.out);
 // DFF(in=mux.out, out=t, out=out);

  DFF(in=mux.out[0], out=t[0], out=out[0]);

  DFF(in=mux.out[1], out=t[1], out=out[1]);
  DFF(in=mux.out[2], out=t[2], out=out[2]);
  DFF(in=mux.out[3], out=t[3], out=out[3]);
  DFF(in=mux.out[4], out=t[4], out=out[4]);
  DFF(in=mux.out[5], out=t[5], out=out[5]);
  DFF(in=mux.out[6], out=t[6], out=out[6]);
  DFF(in=mux.out[7], out=t[7], out=out[7]);
  DFF(in=mux.out[8], out=t[8], out=out[8]);
  DFF(in=mux.out[9], out=t[9], out=out[9]);
  DFF(in=mux.out[10], out=t[10], out=out[10]);
  DFF(in=mux.out[11], out=t[11], out=out[11]);
  DFF(in=mux.out[12], out=t[12], out=out[12]);
  DFF(in=mux.out[13], out=t[13], out=out[13]);
  DFF(in=mux.out[14], out=t[14], out=out[14]);
  DFF(in=mux.out[15], out=t[15], out=out[15]);
}
