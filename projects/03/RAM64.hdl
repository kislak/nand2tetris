// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

PARTS:
  DMux8Way(in=load, sel=address[0..2], a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);
  RAM8(in=in, load=l0, address=address[3..5], out=out.0);
  RAM8(in=in, load=l1, address=address[3..5], out=out.1);
  RAM8(in=in, load=l2, address=address[3..5], out=out.2);
  RAM8(in=in, load=l3, address=address[3..5], out=out.3);
  RAM8(in=in, load=l4, address=address[3..5], out=out.4);
  RAM8(in=in, load=l5, address=address[3..5], out=out.5);
  RAM8(in=in, load=l6, address=address[3..5], out=out.6);
  RAM8(in=in, load=l7, address=address[3..5], out=out.7);
  Mux8Way16(a=out.0, b=out.1, c=out.2, d=out.3, e=out.4, f=out.5, g=out.6, h=out.7, sel=address[0..2], out=out);
}